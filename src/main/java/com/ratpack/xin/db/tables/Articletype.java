/*
 * This file is generated by jOOQ.
*/
package com.ratpack.xin.db.tables;


import com.ratpack.xin.db.Keys;
import com.ratpack.xin.db.Ratpack;
import com.ratpack.xin.db.tables.records.ArticletypeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Articletype extends TableImpl<ArticletypeRecord> {

    private static final long serialVersionUID = 390421608;

    /**
     * The reference instance of <code>ratpack.articletype</code>
     */
    public static final Articletype ARTICLETYPE = new Articletype();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ArticletypeRecord> getRecordType() {
        return ArticletypeRecord.class;
    }

    /**
     * The column <code>ratpack.articletype.id</code>.
     */
    public final TableField<ArticletypeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ratpack.articletype.create_time</code>.
     */
    public final TableField<ArticletypeRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>ratpack.articletype.create_uuid</code>.
     */
    public final TableField<ArticletypeRecord, String> CREATE_UUID = createField("create_uuid", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>ratpack.articletype.type_desc</code>.
     */
    public final TableField<ArticletypeRecord, String> TYPE_DESC = createField("type_desc", org.jooq.impl.SQLDataType.VARCHAR.length(22), this, "");

    /**
     * The column <code>ratpack.articletype.create_user</code>.
     */
    public final TableField<ArticletypeRecord, String> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.VARCHAR.length(22), this, "");

    /**
     * Create a <code>ratpack.articletype</code> table reference
     */
    public Articletype() {
        this("articletype", null);
    }

    /**
     * Create an aliased <code>ratpack.articletype</code> table reference
     */
    public Articletype(String alias) {
        this(alias, ARTICLETYPE);
    }

    private Articletype(String alias, Table<ArticletypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private Articletype(String alias, Table<ArticletypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ratpack.RATPACK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ArticletypeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ARTICLETYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ArticletypeRecord> getPrimaryKey() {
        return Keys.KEY_ARTICLETYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ArticletypeRecord>> getKeys() {
        return Arrays.<UniqueKey<ArticletypeRecord>>asList(Keys.KEY_ARTICLETYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Articletype as(String alias) {
        return new Articletype(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Articletype rename(String name) {
        return new Articletype(name, null);
    }
}
